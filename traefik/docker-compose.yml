version: '3'

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    hostname: traefik
    command:
      # - "--log.level=DEBUG"
      - "--providers.file.directory=/opt/docker/traefik"
      - "--providers.file.watch=true"
      # allows accessing a Traefik dashboard - that simplifies debugging
      # but should be disabled outside of development environments due to security reasons.
      #- "--api.insecure=true"
      # enables the Docker configuration discovery
      - "--providers.docker=true"
      # do not expose Docker services by default
      - "--providers.docker.exposedbydefault=false"
      # create an entrypoint called web, listening on :80
      - "--entrypoints.web.address=:80"
      # redirect to https
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.dnschallenge=true"
      - "--certificatesresolvers.le.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--serversTransport.insecureSkipVerify=true"
    environment:
      - CF_DNS_API_TOKEN=$CF_DNS_API_TOKEN
    ports:
      - "80:80"
      - "443:443"
      #- "8086:8080" # for dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-config:/opt/docker/traefik
      - traefik-letsencrypt:/letsencrypt
    restart: always
    networks:
      - secure
      
volumes:
  traefik-letsencrypt:
  traefik-config:

networks:
  secure:
    external: true
